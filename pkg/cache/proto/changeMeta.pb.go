// Code generated by protoc-gen-go. DO NOT EDIT.
// source: changeMeta.proto

package com_variflight_middleware_gateway_cache

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChangeMeta struct {
	FieldTags            []byte                 `protobuf:"bytes,1,opt,name=fieldTags,proto3" json:"fieldTags,omitempty"`
	Fields               []*ChangeMeta          `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	MapInt32             map[int32]*ChangeMeta  `protobuf:"bytes,3,rep,name=map_int32,json=mapInt32,proto3" json:"map_int32,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapInt64             map[int64]*ChangeMeta  `protobuf:"bytes,4,rep,name=map_int64,json=mapInt64,proto3" json:"map_int64,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapBool              map[bool]*ChangeMeta   `protobuf:"bytes,5,rep,name=map_bool,json=mapBool,proto3" json:"map_bool,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapString            map[string]*ChangeMeta `protobuf:"bytes,6,rep,name=map_string,json=mapString,proto3" json:"map_string,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ChangeMeta) Reset()         { *m = ChangeMeta{} }
func (m *ChangeMeta) String() string { return proto.CompactTextString(m) }
func (*ChangeMeta) ProtoMessage()    {}
func (*ChangeMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ec735c988a12f5b, []int{0}
}

func (m *ChangeMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeMeta.Unmarshal(m, b)
}
func (m *ChangeMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeMeta.Marshal(b, m, deterministic)
}
func (m *ChangeMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeMeta.Merge(m, src)
}
func (m *ChangeMeta) XXX_Size() int {
	return xxx_messageInfo_ChangeMeta.Size(m)
}
func (m *ChangeMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeMeta proto.InternalMessageInfo

func (m *ChangeMeta) GetFieldTags() []byte {
	if m != nil {
		return m.FieldTags
	}
	return nil
}

func (m *ChangeMeta) GetFields() []*ChangeMeta {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *ChangeMeta) GetMapInt32() map[int32]*ChangeMeta {
	if m != nil {
		return m.MapInt32
	}
	return nil
}

func (m *ChangeMeta) GetMapInt64() map[int64]*ChangeMeta {
	if m != nil {
		return m.MapInt64
	}
	return nil
}

func (m *ChangeMeta) GetMapBool() map[bool]*ChangeMeta {
	if m != nil {
		return m.MapBool
	}
	return nil
}

func (m *ChangeMeta) GetMapString() map[string]*ChangeMeta {
	if m != nil {
		return m.MapString
	}
	return nil
}

func init() {
	proto.RegisterType((*ChangeMeta)(nil), "com.variflight.middleware.gateway.cache.ChangeMeta")
	proto.RegisterMapType((map[bool]*ChangeMeta)(nil), "com.variflight.middleware.gateway.cache.ChangeMeta.MapBoolEntry")
	proto.RegisterMapType((map[int32]*ChangeMeta)(nil), "com.variflight.middleware.gateway.cache.ChangeMeta.MapInt32Entry")
	proto.RegisterMapType((map[int64]*ChangeMeta)(nil), "com.variflight.middleware.gateway.cache.ChangeMeta.MapInt64Entry")
	proto.RegisterMapType((map[string]*ChangeMeta)(nil), "com.variflight.middleware.gateway.cache.ChangeMeta.MapStringEntry")
}

func init() { proto.RegisterFile("changeMeta.proto", fileDescriptor_5ec735c988a12f5b) }

var fileDescriptor_5ec735c988a12f5b = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x49, 0xf3, 0xf6, 0xdf, 0xbc, 0x55, 0xca, 0x9e, 0x16, 0xf1, 0x50, 0xbc, 0xd8, 0xd3,
	0x1e, 0xda, 0x52, 0xc4, 0x93, 0x56, 0x3c, 0x14, 0xe9, 0x25, 0x7a, 0x13, 0x2c, 0xd3, 0x74, 0x9b,
	0x2c, 0x6e, 0xb2, 0x31, 0x59, 0x5b, 0xf2, 0xe9, 0xfc, 0x6a, 0x92, 0x4d, 0x30, 0xc9, 0x4d, 0x22,
	0xb9, 0xcd, 0xb3, 0xb0, 0xbf, 0x1f, 0x3c, 0xc3, 0xc0, 0xd8, 0xf5, 0x31, 0xf4, 0xf8, 0x86, 0x6b,
	0x64, 0x51, 0xac, 0xb4, 0x22, 0xd7, 0xae, 0x0a, 0xd8, 0x11, 0x63, 0x71, 0x90, 0xc2, 0xf3, 0x35,
	0x0b, 0xc4, 0x7e, 0x2f, 0xf9, 0x09, 0x63, 0xce, 0x3c, 0xd4, 0xfc, 0x84, 0x29, 0x73, 0xd1, 0xf5,
	0xf9, 0xd5, 0x57, 0x1f, 0xe0, 0xe1, 0xe7, 0x37, 0xb9, 0x84, 0xe1, 0x41, 0x70, 0xb9, 0x7f, 0x41,
	0x2f, 0xa1, 0xd6, 0xc4, 0x9a, 0x8e, 0x9c, 0xf2, 0x81, 0x3c, 0x41, 0xcf, 0x84, 0x84, 0x76, 0x26,
	0xf6, 0xf4, 0xff, 0x6c, 0xce, 0x7e, 0xa9, 0x61, 0xa5, 0xc2, 0x29, 0x10, 0xe4, 0x0d, 0x86, 0x01,
	0x46, 0x5b, 0x11, 0xea, 0xf9, 0x8c, 0xda, 0x86, 0x77, 0xdf, 0x80, 0xc7, 0x36, 0x18, 0xad, 0x33,
	0xc6, 0x63, 0xa8, 0xe3, 0xd4, 0x19, 0x04, 0x45, 0xac, 0xf0, 0x97, 0x0b, 0xfa, 0xef, 0xaf, 0xfc,
	0xe5, 0xa2, 0xc6, 0x5f, 0x2e, 0xc8, 0x2b, 0x64, 0xf3, 0x76, 0xa7, 0x94, 0xa4, 0x5d, 0x83, 0xbf,
	0x6b, 0x88, 0x5f, 0x29, 0x25, 0x73, 0x7a, 0x3f, 0xc8, 0x13, 0x41, 0x80, 0x0c, 0x9e, 0xe8, 0x58,
	0x84, 0x1e, 0xed, 0x19, 0xfc, 0xaa, 0x21, 0xfe, 0xd9, 0x40, 0x72, 0x41, 0x56, 0x49, 0x9e, 0x2f,
	0x22, 0x38, 0xab, 0x55, 0x47, 0xc6, 0x60, 0xbf, 0xf3, 0xd4, 0x6c, 0xbd, 0xeb, 0x64, 0x23, 0x59,
	0x43, 0xf7, 0x88, 0xf2, 0x93, 0xd3, 0xce, 0xc4, 0x6a, 0xba, 0xee, 0x9c, 0x70, 0xdb, 0xb9, 0xb1,
	0x4a, 0x63, 0x51, 0x66, 0xd5, 0x68, 0xb7, 0x62, 0x54, 0x30, 0xaa, 0xf6, 0x5b, 0x15, 0x0e, 0x5a,
	0x11, 0x7e, 0xc0, 0x79, 0xbd, 0xf1, 0xaa, 0x72, 0xd8, 0x86, 0x72, 0xd7, 0x33, 0x17, 0x3f, 0xff,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x2e, 0x1b, 0xd4, 0x05, 0x04, 0x00, 0x00,
}
