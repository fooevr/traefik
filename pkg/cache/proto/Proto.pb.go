// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sys/Proto.proto

package vfasys

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 服务端接口参数
type ProtoDesc struct {
	// 当前服务端版本
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// protobuf文件<文件相对路径, 文件内容base64编码>
	ProtoFiles map[string][]byte `protobuf:"bytes,2,rep,name=protoFiles,proto3" json:"protoFiles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 不缓存rpc name前缀, default: "nc_"
	NoCachePrefix *wrappers.StringValue `protobuf:"bytes,3,opt,name=NoCachePrefix,proto3" json:"NoCachePrefix,omitempty"`
	// 全量缓存rpc name前缀, default: "fc_"
	FullCachePrefix *wrappers.StringValue `protobuf:"bytes,4,opt,name=FullCachePrefix,proto3" json:"FullCachePrefix,omitempty"`
	// 增量缓存rpc name前缀, default: "ic_"
	IncrementCachePrefix *wrappers.StringValue `protobuf:"bytes,5,opt,name=IncrementCachePrefix,proto3" json:"IncrementCachePrefix,omitempty"`
	// 默认缓存有效期,秒, default: "5"
	DefaultTTL *wrappers.Int32Value `protobuf:"bytes,6,opt,name=defaultTTL,proto3" json:"defaultTTL,omitempty"`
	// 默认最大缓存版本数, default: "60"
	DefaultMaxVersion *wrappers.Int32Value `protobuf:"bytes,7,opt,name=defaultMaxVersion,proto3" json:"defaultMaxVersion,omitempty"`
	// 可精确控制的rpc有效期<rpcName, ttl>
	RpcTTLs map[string]int32 `protobuf:"bytes,8,rep,name=rpcTTLs,proto3" json:"rpcTTLs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// 可精确控制的rpc版本数<rpcName, versionCount>
	RpcMaxVersions       map[string]int32 `protobuf:"bytes,9,rep,name=rpcMaxVersions,proto3" json:"rpcMaxVersions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProtoDesc) Reset()         { *m = ProtoDesc{} }
func (m *ProtoDesc) String() string { return proto.CompactTextString(m) }
func (*ProtoDesc) ProtoMessage()    {}
func (*ProtoDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_67ea0a197908976c, []int{0}
}

func (m *ProtoDesc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoDesc.Unmarshal(m, b)
}
func (m *ProtoDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoDesc.Marshal(b, m, deterministic)
}
func (m *ProtoDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoDesc.Merge(m, src)
}
func (m *ProtoDesc) XXX_Size() int {
	return xxx_messageInfo_ProtoDesc.Size(m)
}
func (m *ProtoDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoDesc.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoDesc proto.InternalMessageInfo

func (m *ProtoDesc) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ProtoDesc) GetProtoFiles() map[string][]byte {
	if m != nil {
		return m.ProtoFiles
	}
	return nil
}

func (m *ProtoDesc) GetNoCachePrefix() *wrappers.StringValue {
	if m != nil {
		return m.NoCachePrefix
	}
	return nil
}

func (m *ProtoDesc) GetFullCachePrefix() *wrappers.StringValue {
	if m != nil {
		return m.FullCachePrefix
	}
	return nil
}

func (m *ProtoDesc) GetIncrementCachePrefix() *wrappers.StringValue {
	if m != nil {
		return m.IncrementCachePrefix
	}
	return nil
}

func (m *ProtoDesc) GetDefaultTTL() *wrappers.Int32Value {
	if m != nil {
		return m.DefaultTTL
	}
	return nil
}

func (m *ProtoDesc) GetDefaultMaxVersion() *wrappers.Int32Value {
	if m != nil {
		return m.DefaultMaxVersion
	}
	return nil
}

func (m *ProtoDesc) GetRpcTTLs() map[string]int32 {
	if m != nil {
		return m.RpcTTLs
	}
	return nil
}

func (m *ProtoDesc) GetRpcMaxVersions() map[string]int32 {
	if m != nil {
		return m.RpcMaxVersions
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoDesc)(nil), "vfasys.ProtoDesc")
	proto.RegisterMapType((map[string][]byte)(nil), "vfasys.ProtoDesc.ProtoFilesEntry")
	proto.RegisterMapType((map[string]int32)(nil), "vfasys.ProtoDesc.RpcMaxVersionsEntry")
	proto.RegisterMapType((map[string]int32)(nil), "vfasys.ProtoDesc.RpcTTLsEntry")
}

func init() { proto.RegisterFile("sys/Proto.proto", fileDescriptor_67ea0a197908976c) }

var fileDescriptor_67ea0a197908976c = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x41, 0x6f, 0x94, 0x40,
	0x14, 0xc7, 0x85, 0x15, 0xd6, 0x7d, 0x5d, 0x5d, 0x3b, 0x6d, 0xcc, 0x84, 0x9a, 0x06, 0x4d, 0x4c,
	0xb8, 0xc8, 0x26, 0xf4, 0xd2, 0xb4, 0x31, 0xb1, 0xd5, 0x6e, 0x42, 0xd2, 0x1a, 0x82, 0xa4, 0x07,
	0x6f, 0x14, 0x07, 0x24, 0x52, 0x20, 0x33, 0xc3, 0x5a, 0x3e, 0x88, 0x5f, 0xc0, 0xa3, 0x9f, 0xd0,
	0xa3, 0x61, 0x06, 0x2a, 0xc2, 0x26, 0x6d, 0x2f, 0x64, 0x1e, 0xef, 0xff, 0xff, 0xe5, 0x3f, 0xf3,
	0x66, 0x60, 0xc1, 0x6a, 0xb6, 0xf4, 0x68, 0xc1, 0x0b, 0xbb, 0x6c, 0xbe, 0x48, 0x5f, 0xc7, 0x21,
	0xab, 0x99, 0xb1, 0x9f, 0x14, 0x45, 0x92, 0x91, 0xa5, 0xf8, 0x7b, 0x55, 0xc5, 0xcb, 0x1f, 0x34,
	0x2c, 0x4b, 0x42, 0x99, 0xd4, 0x19, 0x7b, 0xc3, 0x3e, 0xb9, 0x2e, 0x79, 0x2d, 0x9b, 0xaf, 0x7f,
	0xea, 0x30, 0x13, 0xd0, 0x8f, 0x84, 0x45, 0x08, 0xc3, 0x74, 0x4d, 0x28, 0x4b, 0x8b, 0x1c, 0x2b,
	0xa6, 0x62, 0xcd, 0xfc, 0xae, 0x44, 0x27, 0x00, 0xc2, 0xb0, 0x4a, 0x33, 0xc2, 0xb0, 0x6a, 0x4e,
	0xac, 0x2d, 0xe7, 0x95, 0x2d, 0x13, 0xd8, 0xb7, 0x00, 0xb9, 0x12, 0x9a, 0xb3, 0x9c, 0xd3, 0xda,
	0xef, 0x99, 0xd0, 0x29, 0x3c, 0xfd, 0x54, 0x7c, 0x08, 0xa3, 0x6f, 0xc4, 0xa3, 0x24, 0x4e, 0x6f,
	0xf0, 0xc4, 0x54, 0xac, 0x2d, 0xe7, 0xa5, 0x2d, 0xf3, 0xd9, 0x5d, 0x3e, 0xfb, 0x33, 0xa7, 0x69,
	0x9e, 0x5c, 0x86, 0x59, 0x45, 0xfc, 0xff, 0x2d, 0x68, 0x05, 0x8b, 0x55, 0x95, 0x65, 0x7d, 0xca,
	0xe3, 0x7b, 0x50, 0x86, 0x26, 0xe4, 0xc1, 0xae, 0x9b, 0x47, 0x94, 0x5c, 0x93, 0x9c, 0xf7, 0x61,
	0xda, 0x3d, 0x60, 0x1b, 0x9d, 0xe8, 0x18, 0xe0, 0x2b, 0x89, 0xc3, 0x2a, 0xe3, 0x41, 0x70, 0x8e,
	0x75, 0xc1, 0xd9, 0x1b, 0x71, 0xdc, 0x9c, 0x1f, 0x38, 0x12, 0xd3, 0x93, 0x23, 0x17, 0xb6, 0xdb,
	0xea, 0x22, 0xbc, 0xb9, 0x6c, 0x27, 0x30, 0xbd, 0x9b, 0x31, 0x76, 0xa1, 0x43, 0x98, 0xd2, 0x32,
	0x0a, 0x82, 0x73, 0x86, 0x9f, 0x88, 0x29, 0xed, 0x8f, 0xa7, 0xe4, 0x4b, 0x81, 0x1c, 0x51, 0x27,
	0x47, 0x17, 0xf0, 0x8c, 0x96, 0xd1, 0x3f, 0x14, 0xc3, 0x33, 0x01, 0x78, 0xb3, 0x11, 0xd0, 0xd3,
	0x49, 0xce, 0xc0, 0x6c, 0xbc, 0x83, 0xc5, 0xe0, 0x36, 0xa0, 0xe7, 0x30, 0xf9, 0x4e, 0xea, 0xf6,
	0x6a, 0x35, 0x4b, 0xb4, 0x0b, 0xda, 0xba, 0xd9, 0x09, 0x56, 0x4d, 0xc5, 0x9a, 0xfb, 0xb2, 0x38,
	0x52, 0x0f, 0x15, 0xe3, 0x08, 0xe6, 0xfd, 0x98, 0x77, 0x79, 0xb5, 0xbe, 0xf7, 0x04, 0x76, 0x36,
	0x24, 0x7c, 0x08, 0xc2, 0x71, 0x41, 0x13, 0xe9, 0xd1, 0x7b, 0xd8, 0x49, 0x08, 0xbf, 0xdd, 0x3a,
	0x4d, 0x4b, 0xde, 0x1c, 0xf3, 0x8b, 0xd1, 0x58, 0xce, 0x9a, 0x57, 0x65, 0x6c, 0x8f, 0x0e, 0xeb,
	0xf4, 0x2d, 0xb4, 0x2f, 0xd5, 0x7b, 0xf4, 0x65, 0x2e, 0xe4, 0xc7, 0xb2, 0xfe, 0xa3, 0x28, 0xbf,
	0xd4, 0xb6, 0xf7, 0xbb, 0x5b, 0x5c, 0xe9, 0x42, 0x72, 0xf0, 0x37, 0x00, 0x00, 0xff, 0xff, 0xca,
	0x04, 0x9f, 0xe3, 0xf0, 0x03, 0x00, 0x00,
}
