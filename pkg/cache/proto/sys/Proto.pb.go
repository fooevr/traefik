// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sys/Proto.proto

package dataservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 服务端接口参数
type ProtoDesc struct {
	// 当前服务端版本
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// protobuf文件<文件相对路径, 文件内容base64编码>
	Files map[string][]byte `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 不缓存rpc name前缀, default: "nc_"
	NoCachePrefix *wrappers.StringValue `protobuf:"bytes,3,opt,name=NoCachePrefix,proto3" json:"NoCachePrefix,omitempty"`
	// 全量缓存rpc name前缀, default: "fc_"
	FullCachePrefix *wrappers.StringValue `protobuf:"bytes,4,opt,name=FullCachePrefix,proto3" json:"FullCachePrefix,omitempty"`
	// 增量缓存rpc name前缀, default: "ic_"
	IncrementCachePrefix *wrappers.StringValue `protobuf:"bytes,5,opt,name=IncrementCachePrefix,proto3" json:"IncrementCachePrefix,omitempty"`
	// 默认缓存有效期,秒, default: "5"
	DefaultTTL *wrappers.Int32Value `protobuf:"bytes,6,opt,name=defaultTTL,proto3" json:"defaultTTL,omitempty"`
	// 默认最大缓存版本数, default: "60"
	DefaultMaxVersion *wrappers.Int32Value `protobuf:"bytes,7,opt,name=defaultMaxVersion,proto3" json:"defaultMaxVersion,omitempty"`
	// 可精确控制的rpc有效期<rpcName, ttl>
	RpcTTLs map[string]int32 `protobuf:"bytes,8,rep,name=rpcTTLs,proto3" json:"rpcTTLs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// 可精确控制的rpc版本数<rpcName, versionCount>
	RpcMaxVersions       map[string]int32 `protobuf:"bytes,9,rep,name=rpcMaxVersions,proto3" json:"rpcMaxVersions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProtoDesc) Reset()         { *m = ProtoDesc{} }
func (m *ProtoDesc) String() string { return proto.CompactTextString(m) }
func (*ProtoDesc) ProtoMessage()    {}
func (*ProtoDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3a512a3a4f8a699, []int{0}
}

func (m *ProtoDesc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoDesc.Unmarshal(m, b)
}
func (m *ProtoDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoDesc.Marshal(b, m, deterministic)
}
func (m *ProtoDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoDesc.Merge(m, src)
}
func (m *ProtoDesc) XXX_Size() int {
	return xxx_messageInfo_ProtoDesc.Size(m)
}
func (m *ProtoDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoDesc.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoDesc proto.InternalMessageInfo

func (m *ProtoDesc) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ProtoDesc) GetFiles() map[string][]byte {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *ProtoDesc) GetNoCachePrefix() *wrappers.StringValue {
	if m != nil {
		return m.NoCachePrefix
	}
	return nil
}

func (m *ProtoDesc) GetFullCachePrefix() *wrappers.StringValue {
	if m != nil {
		return m.FullCachePrefix
	}
	return nil
}

func (m *ProtoDesc) GetIncrementCachePrefix() *wrappers.StringValue {
	if m != nil {
		return m.IncrementCachePrefix
	}
	return nil
}

func (m *ProtoDesc) GetDefaultTTL() *wrappers.Int32Value {
	if m != nil {
		return m.DefaultTTL
	}
	return nil
}

func (m *ProtoDesc) GetDefaultMaxVersion() *wrappers.Int32Value {
	if m != nil {
		return m.DefaultMaxVersion
	}
	return nil
}

func (m *ProtoDesc) GetRpcTTLs() map[string]int32 {
	if m != nil {
		return m.RpcTTLs
	}
	return nil
}

func (m *ProtoDesc) GetRpcMaxVersions() map[string]int32 {
	if m != nil {
		return m.RpcMaxVersions
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoDesc)(nil), "com.variflight.dataservice.ProtoDesc")
	proto.RegisterMapType((map[string][]byte)(nil), "com.variflight.dataservice.ProtoDesc.FilesEntry")
	proto.RegisterMapType((map[string]int32)(nil), "com.variflight.dataservice.ProtoDesc.RpcMaxVersionsEntry")
	proto.RegisterMapType((map[string]int32)(nil), "com.variflight.dataservice.ProtoDesc.RpcTTLsEntry")
}

func init() { proto.RegisterFile("proto/sys/Proto.proto", fileDescriptor_d3a512a3a4f8a699) }

var fileDescriptor_d3a512a3a4f8a699 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0x87, 0x49, 0x4a, 0x5a, 0x7a, 0x36, 0xfe, 0x79, 0x03, 0x45, 0x19, 0x42, 0x15, 0x12, 0x52,
	0xaf, 0x1c, 0x94, 0xdd, 0x8c, 0x71, 0xc5, 0xd8, 0x2a, 0x55, 0x2a, 0xa8, 0xca, 0xa2, 0x5d, 0x20,
	0x21, 0xe4, 0x65, 0x27, 0x99, 0x45, 0x9a, 0x44, 0xb6, 0x5b, 0xd6, 0xd7, 0xe1, 0x92, 0x77, 0xe0,
	0xbd, 0xb8, 0x44, 0xb1, 0xdb, 0x35, 0xb4, 0x63, 0x0b, 0x77, 0x3e, 0x3a, 0xfe, 0xbe, 0x1c, 0xe7,
	0x67, 0xc3, 0xb3, 0x52, 0x14, 0xaa, 0xf0, 0xe5, 0x5c, 0xfa, 0xe3, 0x6a, 0x45, 0x75, 0x4d, 0xbc,
	0xb8, 0x98, 0xd0, 0x19, 0x13, 0x3c, 0xc9, 0x78, 0x7a, 0xa9, 0xe8, 0x05, 0x53, 0x4c, 0xa2, 0x98,
	0xf1, 0x18, 0xbd, 0x97, 0x69, 0x51, 0xa4, 0x19, 0xfa, 0x7a, 0xe7, 0xf9, 0x34, 0xf1, 0xbf, 0x0b,
	0x56, 0x96, 0x28, 0xa4, 0x61, 0xbd, 0xbd, 0xf5, 0x3e, 0x4e, 0x4a, 0x35, 0x37, 0xcd, 0x57, 0xbf,
	0xda, 0xd0, 0xd5, 0x1f, 0x3a, 0x46, 0x19, 0x13, 0x17, 0x3a, 0x33, 0x14, 0x92, 0x17, 0xb9, 0x6b,
	0xf5, 0xac, 0x7e, 0x37, 0x5c, 0x96, 0x64, 0x00, 0x4e, 0xc2, 0x33, 0x94, 0xae, 0xdd, 0x6b, 0xf5,
	0xb7, 0x82, 0x37, 0xf4, 0xdf, 0x03, 0xd1, 0x6b, 0x1f, 0x1d, 0x54, 0xc8, 0x49, 0xae, 0xc4, 0x3c,
	0x34, 0x38, 0x39, 0x82, 0x87, 0x9f, 0x8a, 0x0f, 0x2c, 0xbe, 0xc4, 0xb1, 0xc0, 0x84, 0x5f, 0xb9,
	0xad, 0x9e, 0xd5, 0xdf, 0x0a, 0x5e, 0x50, 0x33, 0x24, 0x5d, 0x0e, 0x49, 0x4f, 0x95, 0xe0, 0x79,
	0x7a, 0xc6, 0xb2, 0x29, 0x86, 0x7f, 0x23, 0x64, 0x00, 0x8f, 0x07, 0xd3, 0x2c, 0xab, 0x5b, 0xee,
	0x37, 0xb0, 0xac, 0x43, 0x64, 0x0c, 0xbb, 0xc3, 0x3c, 0x16, 0x38, 0xc1, 0x5c, 0xd5, 0x65, 0x4e,
	0x03, 0xd9, 0x8d, 0x24, 0x79, 0x07, 0x70, 0x81, 0x09, 0x9b, 0x66, 0x2a, 0x8a, 0x46, 0x6e, 0x5b,
	0x7b, 0xf6, 0x36, 0x3c, 0xc3, 0x5c, 0xed, 0x07, 0x46, 0x53, 0xdb, 0x4e, 0x86, 0xf0, 0x74, 0x51,
	0x7d, 0x64, 0x57, 0x67, 0x8b, 0x18, 0x3a, 0x77, 0x3b, 0x36, 0x29, 0x32, 0x82, 0x8e, 0x28, 0xe3,
	0x28, 0x1a, 0x49, 0xf7, 0x81, 0xce, 0x2b, 0x68, 0x96, 0x57, 0x68, 0x20, 0x93, 0xd8, 0x52, 0x41,
	0x18, 0x3c, 0x12, 0x65, 0xbc, 0xd2, 0x4b, 0xb7, 0xab, 0xa5, 0x6f, 0x1b, 0x4b, 0x6b, 0xac, 0x71,
	0xaf, 0x09, 0xbd, 0x03, 0x80, 0xd5, 0x5d, 0x21, 0x4f, 0xa0, 0xf5, 0x0d, 0xe7, 0x8b, 0x2b, 0x58,
	0x2d, 0xc9, 0x2e, 0x38, 0xb3, 0xea, 0xb0, 0xae, 0xdd, 0xb3, 0xfa, 0xdb, 0xa1, 0x29, 0x0e, 0xed,
	0x03, 0xcb, 0x3b, 0x84, 0xed, 0xfa, 0xd4, 0x77, 0xb1, 0x4e, 0x9d, 0x7d, 0x0f, 0x3b, 0x37, 0x0c,
	0xf7, 0x3f, 0x8a, 0xe0, 0x0b, 0x38, 0xfa, 0xa4, 0x24, 0x82, 0x9d, 0x14, 0xd5, 0xf5, 0xa9, 0x05,
	0x2f, 0x55, 0x95, 0xc4, 0xf3, 0x8d, 0xe4, 0x4e, 0xaa, 0xd7, 0xe7, 0xbd, 0x6e, 0xf4, 0xef, 0x8e,
	0xbe, 0xc2, 0x2d, 0x2f, 0x7f, 0x7c, 0xef, 0x73, 0xd5, 0xf5, 0x57, 0x5d, 0xbf, 0xd6, 0xfd, 0x6d,
	0x59, 0x3f, 0x6c, 0xfb, 0xf8, 0xf4, 0xa7, 0x7d, 0x8b, 0xe2, 0xbc, 0xad, 0xe7, 0xda, 0xff, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xfd, 0xad, 0x6f, 0x92, 0x78, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProtoClient is the client API for Proto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProtoClient interface {
	GetProtoDescription(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ProtoDesc, error)
}

type protoClient struct {
	cc *grpc.ClientConn
}

func NewProtoClient(cc *grpc.ClientConn) ProtoClient {
	return &protoClient{cc}
}

func (c *protoClient) GetProtoDescription(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ProtoDesc, error) {
	out := new(ProtoDesc)
	err := c.cc.Invoke(ctx, "/com.variflight.dataservice.Proto/getProtoDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProtoServer is the server API for Proto service.
type ProtoServer interface {
	GetProtoDescription(context.Context, *empty.Empty) (*ProtoDesc, error)
}

// UnimplementedProtoServer can be embedded to have forward compatible implementations.
type UnimplementedProtoServer struct {
}

func (*UnimplementedProtoServer) GetProtoDescription(ctx context.Context, req *empty.Empty) (*ProtoDesc, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProtoDescription not implemented")
}

func RegisterProtoServer(s *grpc.Server, srv ProtoServer) {
	s.RegisterService(&_Proto_serviceDesc, srv)
}

func _Proto_GetProtoDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoServer).GetProtoDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.variflight.dataservice.Proto/GetProtoDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoServer).GetProtoDescription(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.variflight.dataservice.Proto",
	HandlerType: (*ProtoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getProtoDescription",
			Handler:    _Proto_GetProtoDescription_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sys/Proto.proto",
}
